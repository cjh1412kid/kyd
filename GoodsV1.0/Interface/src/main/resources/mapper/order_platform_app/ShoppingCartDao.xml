<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.nuite.modules.order_platform_app.dao.ShoppingCartDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.nuite.modules.order_platform_app.entity.ShoppingCartEntity" id="shoppingCartMap">
        <result property="seq" column="Seq"/>
        <result property="userSeq" column="User_Seq"/>
        <result property="shoesDataSeq" column="ShoesData_Seq"/>
        <result property="buyCount" column="BuyCount"/>
        <result property="totalPrice" column="TotalPrice"/>
        <result property="isChecked" column="IsChecked"/>
        <result property="inputTime" column="InputTime"/>
        <result property="del" column="Del"/>
    </resultMap>


	<!-- 定义resultMap，type为HashMap -->
	<resultMap id="shoppingCartShoesMap" type="java.util.HashMap">
	    <id column="Seq" property="seq" jdbcType="INTEGER" />
	    <result column="BuyCount" property="buyCount" jdbcType="INTEGER" />
	    <result column="IsChecked" property="isChecked" jdbcType="INTEGER" />
	    <result column="ShoesDataSeq" property="shoesDataSeq" jdbcType="INTEGER" />
    	<result column="ColorCode" property="colorCode" jdbcType="VARCHAR"/>
    	<result column="ColorName" property="colorName" jdbcType="VARCHAR"/>
	    <result column="SizeCode" property="sizeCode" jdbcType="VARCHAR" />
	    <result column="SizeName" property="size" jdbcType="VARCHAR" />
	    <result column="Stock" property="stock" jdbcType="INTEGER" />
	    <result column="Remark" property="remark" jdbcType="VARCHAR" />
	    <result column="ShoesSeq" property="shoesSeq" jdbcType="INTEGER" />
	    <result column="Img1" property="img" jdbcType="VARCHAR" />
	    <result column="GoodName" property="goodName" jdbcType="VARCHAR" />
	    <result column="GoodID" property="goodId" jdbcType="VARCHAR" />
	    <result column="Introduce" property="introduce" jdbcType="VARCHAR" />
	    <result column="OemPrice" property="oemPrice" jdbcType="DECIMAL" />
	    <result column="WholesalerPrice" property="wholesalerPrice" jdbcType="DECIMAL" />
	    <result column="StorePrice" property="storePrice" jdbcType="DECIMAL" />
	    <result column="SalePrice" property="salePrice" jdbcType="DECIMAL" />
	    <result column="OnSale" property="onSale" jdbcType="INTEGER" />
	    <result column="OffSaleTime" property="offSaleTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	
		
	<!-- 购物车列表 -->
	<select id="getShoppingCartListByUserSeq" resultMap="shoppingCartShoesMap">
		SELECT
			A.Seq AS Seq, A.BuyCount, A.IsChecked, B.Seq AS ShoesDataSeq, E.Code AS ColorCode, E.Name AS ColorName, F.SizeCode, F.SizeName, 
			B.Stock, B.Remark, C.Seq AS ShoesSeq, C.Img1, C.GoodName, C.GoodID, C.Introduce, 
			D.OemPrice, D.WholesalerPrice, D.StorePrice, D.SalePrice, D.OnSale, D.OffSaleTime
		FROM
			YHSROrderPlatform.dbo.YHSR_OP_ShoppingCart A
		LEFT JOIN YHSROrderPlatform.dbo.YHSR_OP_ShoesData B ON A.ShoesData_Seq = B.Seq
		LEFT JOIN YHSmartRetail.dbo.YHSR_Goods_Color E ON B.Color_Seq = E.Seq
		LEFT JOIN YHSmartRetail.dbo.YHSR_Goods_Size F ON B.Size_Seq = F.Seq
		LEFT JOIN YHSmartRetail.dbo.YHSR_Goods_Shoes C ON B.Shoes_Seq = C.Seq
		LEFT JOIN YHSROrderPlatform.dbo.YHSR_OP_ShoesInfo D ON B.Shoes_Seq = D.Shoes_Seq
		
		WHERE
			A.Del = 0 AND B.Del = 0 AND C.Del = 0 AND D.Del = 0 
			AND A.User_Seq = #{0}
		ORDER BY
			A.InputTime DESC
	</select>
  <select id="getShoppingCartListByDateAndShoesDataSeq"
          resultType="io.nuite.modules.order_platform_app.entity.ShoppingCartEntity">
	  SELECT
	  	 [Seq] as seq
      ,[ShoesData_Seq] as shoesDataSeq
      ,[BuyCount] as buyCount
      ,convert(char(10),[InputTime],120) as dateStr
    FROM [YHSROrderPlatform].[dbo].[YHSR_OP_ShoppingCart]
    WHERE convert(char(10),[InputTime],120) between convert(char(10),#{startTime},120) and convert(char(10),#{endTime},120)
    and Del =0
    <foreach collection="shoesDataSeqs" item="seq" open="and ShoesData_Seq in (" separator="," close=")">
			#{seq}
		</foreach>
	</select>


</mapper>